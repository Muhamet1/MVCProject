@using Project.Models;
@model List<Project.Models.UserRolesViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="margin:40px;">
<h1>User Roles</h1>
<partial name="_NavAdminPartial" />
<hr />
<label>Search Users: </label>
 <input type="text" id="textsearch" class="form-control mr-sm-2 " placeholder="Enter User Name .." />
 <br />
<table class="table table-hover table-bordered">
    <thead>
        <tr class="table-dark">
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Email</td>
                <td>@string.Join(" , ",user.Roles.ToList())</td>
                <td>
                    <a class="btn btn-primary" asp-controller="UserRoles" asp-action="Manage" asp-route-userId="@user.UserId">Manage Roles</a>
                </td>
            </tr>
        }
    </tbody>
</table>
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script>
    $("#textsearch").on("keyup", function(){
        var txtenter = $(this).val();

        $("table tr").each(function (results){
            if(results !== 0 )
            {    
                var id = $(this).find("td:nth-child(1)").text();
                if(id.indexOf(txtenter) !== 0 && id.toLowerCase().indexOf(txtenter.toLowerCase()) < 0 )
                {
                    $(this).hide();
                }
                else
                {
                    $(this).show();
                }
            }
        });
    });
</script>

</div>